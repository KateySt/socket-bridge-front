import type {Metadata} from "next";
import {Geist} from "next/font/google";
import "../globals.css";
import {Header} from "@/component/header/Header";
import React from "react";
import {hasLocale, NextIntlClientProvider} from 'next-intl';
import {notFound} from 'next/navigation';
import {routing} from '@/i18n/routing';
import {setRequestLocale} from "next-intl/server";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export function generateStaticParams() {
  return routing.locales.map((locale) => ({locale}));
}

export default async function RootLayout({
                                           children,
                                           params
                                         }: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const {locale} = await params;

  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  setRequestLocale(locale);

  return (
    <html lang={locale}>
    <body className={`${geistSans.variable} antialiased`}>
      <NextIntlClientProvider>
        <Header/>
        <main className="p-6">{children}</main>
      </NextIntlClientProvider>
    </body>
    </html>
  );
}
